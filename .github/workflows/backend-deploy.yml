name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'supabase/**'
      - '.github/workflows/backend-deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'supabase/**'

jobs:
  test-migrations:
    name: Test Database Migrations
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Supabase CLI
        run: |
          wget -qO- https://supabase.com/install.sh | sh
          export PATH="$HOME/.local/bin:$PATH"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          supabase --version
        
      - name: Start Supabase locally
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase start
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Test migrations
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase db reset
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Stop Supabase
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase stop
        if: always()

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Supabase CLI
        run: |
          wget -qO- https://supabase.com/install.sh | sh
          export PATH="$HOME/.local/bin:$PATH"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          supabase --version
        
      - name: Link to Supabase project
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF_STAGING }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy database migrations
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy Edge Functions
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase functions deploy
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Notify staging deployment
        run: |
          echo "ðŸš€ Backend deployed to staging successfully!"
          echo "Staging URL: https://${{ secrets.SUPABASE_PROJECT_REF_STAGING }}.supabase.co"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Supabase CLI
        run: |
          wget -qO- https://supabase.com/install.sh | sh
          export PATH="$HOME/.local/bin:$PATH"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          supabase --version
        
      - name: Link to Supabase project
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF_PROD }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy database migrations
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy Edge Functions
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          supabase functions deploy
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Notify production deployment
        run: |
          echo "ðŸš€ Backend deployed to production successfully!"
          echo "Production URL: https://${{ secrets.SUPABASE_PROJECT_REF_PROD }}.supabase.co"
