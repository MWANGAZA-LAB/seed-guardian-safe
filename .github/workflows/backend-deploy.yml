name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - "supabase/**"
      - ".github/workflows/backend-deploy.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "supabase/**"

# Prevent overlapping deploys per branch
concurrency:
  group: backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-migrations:
    name: Test Database Migrations (local)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # Spin up local stack and verify migrations apply cleanly
      - name: Start Supabase locally
        run: supabase start

      - name: Reset & apply migrations locally
        run: supabase db reset

      - name: Stop Supabase
        if: always()
        run: supabase stop

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    needs: [test-migrations]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # Push DB migrations directly using the direct (non-pooler) connection string.
      # Store this in a secret to avoid URL-encoding headaches.
      # Example secret value format:
      #   postgresql://postgres:Kryshevin%402025@aws-1-eu-north-1.supabase.com:5432/postgres
      - name: Push database migrations
        run: supabase db push --db-url "${{ secrets.SUPABASE_DB_URL_STAGING }}"

      # Deploy all edge functions in supabase/functions
      - name: Deploy Edge Functions
        run: supabase functions deploy --project-ref "${{ secrets.SUPABASE_PROJECT_REF_STAGING }}"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Done
        run: |
          echo "✅ Staging deploy complete"
          echo "Project: https://${{ secrets.SUPABASE_PROJECT_REF_STAGING }}.supabase.co"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test-migrations]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Push database migrations
        run: supabase db push --db-url "${{ secrets.SUPABASE_DB_URL_PROD }}"

      - name: Deploy Edge Functions
        run: supabase functions deploy --project-ref "${{ secrets.SUPABASE_PROJECT_REF_PROD }}"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Done
        run: |
          echo "✅ Production deploy complete"
          echo "Project: https://${{ secrets.SUPABASE_PROJECT_REF_PROD }}.supabase.co"
