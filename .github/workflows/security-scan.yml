name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * 1'  # Run weekly on Mondays at 2 AM

jobs:
  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: npm audit --audit-level=moderate || true
        
      - name: Run npm outdated check
        run: npm outdated || true

  code-scanning:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
          
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  supabase-security:
    name: Supabase Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Supabase CLI
        run: |
          curl -fsSL https://supabase.com/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          supabase --version
        
      - name: Validate Supabase configuration
        run: |
          if [ -f "supabase/config.toml" ]; then
            echo "✅ Supabase config found"
            cat supabase/config.toml
          else
            echo "⚠️ No Supabase config found"
          fi
          
      - name: Check for sensitive data in migrations
        run: |
          echo "🔍 Scanning migrations for sensitive data..."
          if grep -r -i "password\|secret\|key\|token" supabase/migrations/; then
            echo "⚠️ Potential sensitive data found in migrations"
            exit 1
          else
            echo "✅ No obvious sensitive data found in migrations"
          fi

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          extra_args: --only-verified

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-check, code-scanning, supabase-security, secrets-scan]
    if: always()
    
    steps:
      - name: Security Summary
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Dependency Check:** ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Code Scanning:** ${{ needs.code-scanning.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Supabase Security:** ${{ needs.supabase-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Secrets Detection:** ${{ needs.secrets-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          
      - name: Notify on security issues
        if: failure()
        run: |
          echo "🚨 Security issues detected!"
          echo "Please review the scan results and address any vulnerabilities."
