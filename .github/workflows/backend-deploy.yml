name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'supabase/**'
      - '.github/workflows/backend-deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'supabase/**'

jobs:
  test-migrations:
    name: Test Database Migrations
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
        
      - name: Start Supabase locally
        run: supabase start
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Test migrations
        run: supabase db reset
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Stop Supabase
        run: supabase stop
        if: always()

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
        
      - name: Debug project reference
        run: |
          echo "=== DETAILED DEBUG INFO ==="
          echo "Environment variables:"
          echo "  SUPABASE_PROJECT_REF: '$SUPABASE_PROJECT_REF'"
          echo "  SUPABASE_ACCESS_TOKEN: '$SUPABASE_ACCESS_TOKEN'"
          echo "  SUPABASE_DB_PASSWORD: '$SUPABASE_DB_PASSWORD'"
          echo ""
          echo "Lengths:"
          echo "  Project ref length: ${#SUPABASE_PROJECT_REF}"
          echo "  Access token length: ${#SUPABASE_ACCESS_TOKEN}"
          echo "  DB password length: ${#SUPABASE_DB_PASSWORD}"
          echo ""
          echo "First few characters:"
          echo "  Project ref (first 4): '${SUPABASE_PROJECT_REF:0:4}'"
          echo "  Access token (first 4): '${SUPABASE_ACCESS_TOKEN:0:4}'"
          echo "  DB password (first 4): '${SUPABASE_DB_PASSWORD:0:4}'"
          echo ""
          echo "GitHub context:"
          echo "  Repository: ${{ github.repository }}"
          echo "  Branch: ${{ github.ref }}"
          echo "  Event: ${{ github.event_name }}"
          echo "========================"
          
          # Check if secrets are empty
          if [ -z "$SUPABASE_PROJECT_REF" ]; then
            echo ""
            echo "‚ùå CRITICAL ERROR: SUPABASE_PROJECT_REF is EMPTY!"
            echo ""
            echo "üîß TROUBLESHOOTING STEPS:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Click 'New repository secret'"
            echo "3. Name: SUPABASE_PROJECT_REF"
            echo "4. Value: gwizmwhxbvayhebbyvql"
            echo "5. Click 'Add secret'"
            echo ""
            echo "üìã Current secrets in this repository:"
            echo "  (This will show if any secrets exist)"
            exit 1
          fi
          
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
            echo ""
            echo "‚ùå CRITICAL ERROR: SUPABASE_ACCESS_TOKEN is EMPTY!"
            echo ""
            echo "üîß TROUBLESHOOTING STEPS:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Name: SUPABASE_ACCESS_TOKEN"
            echo "3. Value: sbp_your_token_here (get from https://supabase.com/dashboard/account/tokens)"
            echo "4. Click 'Add secret'"
            exit 1
          fi
          
          if [ -z "$SUPABASE_DB_PASSWORD" ]; then
            echo ""
            echo "‚ùå CRITICAL ERROR: SUPABASE_DB_PASSWORD is EMPTY!"
            echo ""
            echo "üîß TROUBLESHOOTING STEPS:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Click 'New repository secret'"
            echo "3. Name: SUPABASE_DB_PASSWORD"
            echo "4. Value: Your database password (get from Supabase Dashboard ‚Üí Settings ‚Üí Database)"
            echo "5. Click 'Add secret'"
            exit 1
          fi
          
          # Check if project ref is reasonable length
          if [ ${#SUPABASE_PROJECT_REF} -lt 20 ] || [ ${#SUPABASE_PROJECT_REF} -gt 25 ]; then
            echo ""
            echo "‚ùå ERROR: SUPABASE_PROJECT_REF length is ${#SUPABASE_PROJECT_REF}, expected 21-24 characters"
            echo "Current value: '$SUPABASE_PROJECT_REF'"
            echo "Expected value: 'gwizmwhxbvayhebbyvql' (21 characters)"
            exit 1
          fi
          
          echo ""
          echo "‚úÖ SUCCESS: All secrets are set correctly!"
          echo "  Project ref: '$SUPABASE_PROJECT_REF' (${#SUPABASE_PROJECT_REF} chars)"
          echo "  Access token: '${SUPABASE_ACCESS_TOKEN:0:4}...' (${#SUPABASE_ACCESS_TOKEN} chars)"
          echo "  DB password: '${SUPABASE_DB_PASSWORD:0:4}...' (${#SUPABASE_DB_PASSWORD} chars)"
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          
      - name: Link to Supabase project
        run: supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }} --password ${{ secrets.SUPABASE_DB_PASSWORD }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy database migrations
        run: supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy Edge Functions
        run: supabase functions deploy
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Notify staging deployment
        run: |
          echo "üöÄ Backend deployed to staging successfully!"
          echo "Staging URL: https://${{ secrets.SUPABASE_PROJECT_REF }}.supabase.co"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
        
      - name: Debug project reference
        run: |
          echo "=== DETAILED DEBUG INFO ==="
          echo "Environment variables:"
          echo "  SUPABASE_PROJECT_REF: '$SUPABASE_PROJECT_REF'"
          echo "  SUPABASE_ACCESS_TOKEN: '$SUPABASE_ACCESS_TOKEN'"
          echo "  SUPABASE_DB_PASSWORD: '$SUPABASE_DB_PASSWORD'"
          echo ""
          echo "Lengths:"
          echo "  Project ref length: ${#SUPABASE_PROJECT_REF}"
          echo "  Access token length: ${#SUPABASE_ACCESS_TOKEN}"
          echo "  DB password length: ${#SUPABASE_DB_PASSWORD}"
          echo ""
          echo "First few characters:"
          echo "  Project ref (first 4): '${SUPABASE_PROJECT_REF:0:4}'"
          echo "  Access token (first 4): '${SUPABASE_ACCESS_TOKEN:0:4}'"
          echo "  DB password (first 4): '${SUPABASE_DB_PASSWORD:0:4}'"
          echo ""
          echo "GitHub context:"
          echo "  Repository: ${{ github.repository }}"
          echo "  Branch: ${{ github.ref }}"
          echo "  Event: ${{ github.event_name }}"
          echo "========================"
          
          # Check if secrets are empty
          if [ -z "$SUPABASE_PROJECT_REF" ]; then
            echo ""
            echo "‚ùå CRITICAL ERROR: SUPABASE_PROJECT_REF is EMPTY!"
            echo ""
            echo "üîß TROUBLESHOOTING STEPS:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Click 'New repository secret'"
            echo "3. Name: SUPABASE_PROJECT_REF"
            echo "4. Value: gwizmwhxbvayhebbyvql"
            echo "5. Click 'Add secret'"
            echo ""
            echo "üìã Current secrets in this repository:"
            echo "  (This will show if any secrets exist)"
            exit 1
          fi
          
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
            echo ""
            echo "‚ùå CRITICAL ERROR: SUPABASE_ACCESS_TOKEN is EMPTY!"
            echo ""
            echo "üîß TROUBLESHOOTING STEPS:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Name: SUPABASE_ACCESS_TOKEN"
            echo "3. Value: sbp_your_token_here (get from https://supabase.com/dashboard/account/tokens)"
            echo "4. Click 'Add secret'"
            exit 1
          fi
          
          if [ -z "$SUPABASE_DB_PASSWORD" ]; then
            echo ""
            echo "‚ùå CRITICAL ERROR: SUPABASE_DB_PASSWORD is EMPTY!"
            echo ""
            echo "üîß TROUBLESHOOTING STEPS:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Click 'New repository secret'"
            echo "3. Name: SUPABASE_DB_PASSWORD"
            echo "4. Value: Your database password (get from Supabase Dashboard ‚Üí Settings ‚Üí Database)"
            echo "5. Click 'Add secret'"
            exit 1
          fi
          
          # Check if project ref is reasonable length
          if [ ${#SUPABASE_PROJECT_REF} -lt 20 ] || [ ${#SUPABASE_PROJECT_REF} -gt 25 ]; then
            echo ""
            echo "‚ùå ERROR: SUPABASE_PROJECT_REF length is ${#SUPABASE_PROJECT_REF}, expected 21-24 characters"
            echo "Current value: '$SUPABASE_PROJECT_REF'"
            echo "Expected value: 'gwizmwhxbvayhebbyvql' (21 characters)"
            exit 1
          fi
          
          echo ""
          echo "‚úÖ SUCCESS: All secrets are set correctly!"
          echo "  Project ref: '$SUPABASE_PROJECT_REF' (${#SUPABASE_PROJECT_REF} chars)"
          echo "  Access token: '${SUPABASE_ACCESS_TOKEN:0:4}...' (${#SUPABASE_ACCESS_TOKEN} chars)"
          echo "  DB password: '${SUPABASE_DB_PASSWORD:0:4}...' (${#SUPABASE_DB_PASSWORD} chars)"
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          
      - name: Link to Supabase project
        run: supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }} --password ${{ secrets.SUPABASE_DB_PASSWORD }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy database migrations
        run: supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Deploy Edge Functions
        run: supabase functions deploy
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          
      - name: Notify production deployment
        run: |
          echo "üöÄ Backend deployed to production successfully!"
          echo "Production URL: https://${{ secrets.SUPABASE_PROJECT_REF }}.supabase.co"
